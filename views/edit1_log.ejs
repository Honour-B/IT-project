<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Edit Log</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet">
  <script src="https://widget.cloudinary.com/v2.0/global/all.js"></script>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
<style>
  body {
    background: linear-gradient(to right, #e3f2fd, #f8f9fa);
    font-family: 'Segoe UI', sans-serif;
    margin: 0;
    padding: 20px;
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
  }

  .edit-card {
    background: white;
    padding: 30px 25px;
    border-radius: 20px;
    box-shadow: 0 20px 35px rgba(0, 0, 0, 0.08);
    width: 100%;
    max-width: 500px;
    animation: fadeIn 0.5s ease-in-out;
  }

  h2 {
    text-align: center;
    font-size: 24px;
    font-weight: 700;
    color: #0d6efd;
    margin-bottom: 25px;
  }

  label {
    font-weight: 600;
    margin-bottom: 8px;
    display: block;
    color: #333;
  }

  textarea {
    width: 100%;
    min-height: 160px;
    padding: 12px 15px;
    border: 1px solid #ccc;
    border-radius: 10px;
    font-size: 15px;
    resize: vertical;
    transition: border-color 0.3s;
  }

  textarea:focus {
    outline: none;
    border-color: #0d6efd;
    box-shadow: 0 0 0 3px rgba(13, 110, 253, 0.2);
  }

  .btn-update {
    width: 100%;
    padding: 14px;
    background: #0d6efd;
    color: white;
    font-size: 16px;
    font-weight: 600;
    border: none;
    border-radius: 10px;
    transition: background 0.3s ease;
    margin-top: 20px;
  }

  .btn-update:hover {
    background: #0b5ed7;
  }

  .nav-links {
    margin-top: 25px;
    display: flex;
    justify-content: space-between;
    font-size: 14px;
  }

  .nav-links a {
    color: #495057;
    text-decoration: none;
    transition: color 0.3s ease;
  }

  .nav-links a:hover {
    color: #0d6efd;
    text-decoration: underline;
  }

  /* Modal styles */
  .modal {
    position: fixed;
    top: 0; left: 0;
    width: 100%; height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 999;
  }

  .modal-content {
    background-color: #fff;
    padding: 25px;
    border-radius: 16px;
    width: 90%;
    max-width: 480px;
    box-shadow: 0 15px 30px rgba(0,0,0,0.1);
    position: relative;
    animation: slideUp 0.4s ease;
  }

  .close {
    position: absolute;
    top: 10px; right: 15px;
    font-size: 24px;
    color: #aaa;
    cursor: pointer;
  }

  .close:hover {
    color: #000;
  }

  /* Animations */
  @keyframes fadeIn {
    from { opacity: 0; transform: scale(0.95); }
    to { opacity: 1; transform: scale(1); }
  }

  @keyframes slideUp {
    from { transform: translateY(40px); opacity: 0; }
    to { transform: translateY(0); opacity: 1; }
  }

  /* Responsive tweaks */
  @media (max-width: 480px) {
    .edit-card {
      padding: 25px 20px;
    }

    .modal-content {
      padding: 20px;
    }

    textarea {
      font-size: 14px;
    }
  }
</style>
</head>
<body>

  <div class="edit-card">
    <h2><i class="fas fa-pen-to-square"></i> Edit Your Log</h2>

    <form action="/edit-new-log" method="POST">
      <input type="hidden" name="log_id" value="<%= log.log_id %>">
      <input type="hidden" name="imagefiles" id="imagefiles" value='<%= JSON.stringify(log.images || []) %>'>
      <label for="log_text">Log Text:</label>
      <textarea id="log_text" name="log_text" required><%= log.log_text %></textarea>
         <button type="button" id="openCloudinaryWidget" class="btn btn-secondary mb-3 position-relative">
             📎 Manage Images
           <span id="image-count-badge" class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger" style="display: none;">0</span>
        </button>

      <div id="image-preview" class="mb-3">
  <% if (log.images && log.images.length > 0) { %>
    <h5>Previously Uploaded Images:</h5>
    <% log.images.forEach((img, index) => { %>
      
      <div class="image-container position-relative d-inline-block m-2">
        <img src="<%= img %>" alt="uploaded image" width="150" class="rounded">
        <button type="button" class="btn-close position-absolute top-0 start-100 translate-middle remove-image" data-index="<%= index %>"></button>
      </div>
    <% }) %>
  <% } %>
</div>

      <button type="submit" class="btn-update mt-4">Update Log</button>
    </form>    
    <div class="nav-links mt-4">
      <a href="/submit-log"><i class="fas fa-home"></i> Home</a>
      <a href="/view-logs"><i class="fas fa-arrow-left"></i> Back to Logs</a>
    </div>
  </div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const imageInput = document.getElementById('imagefiles');
    const imagePreview = document.getElementById('image-preview');
    const imageBadge = document.getElementById('image-count-badge');

    let imageUrls = [];

    try {
      imageUrls = JSON.parse(imageInput.value) || [];
    } catch (e) {
      imageUrls = [];
    }

    function updateImageInput() {
      imageInput.value = JSON.stringify(imageUrls);
      imageBadge.textContent = imageUrls.length;
      imageBadge.style.display = imageUrls.length > 0 ? 'inline-block' : 'none';
    }

    function refreshPreview() {
      imagePreview.innerHTML = '';
      if (imageUrls.length > 0) {
        const title = document.createElement('h5');
        title.textContent = 'Uploaded Images:';
        imagePreview.appendChild(title);
      }

      imageUrls.forEach((url, index) => {
        const container = document.createElement('div');
        container.className = 'image-container position-relative d-inline-block m-2';

        const img = document.createElement('img');
        img.src = url;
        img.width = 150;
        img.className = 'rounded';

        const btn = document.createElement('button');
        btn.type = 'button';
        btn.className = 'btn-close position-absolute top-0 start-100 translate-middle remove-image';
        btn.dataset.index = index;

        btn.addEventListener('click', () => {
          imageUrls.splice(index, 1);
          updateImageInput();
          refreshPreview();
        });

        container.appendChild(img);
        container.appendChild(btn);
        imagePreview.appendChild(container);
      });
    }

    document.getElementById('openCloudinaryWidget').addEventListener('click', () => {
      cloudinary.openUploadWidget({
        cloudName: 'dujkkigqf', // 🔁 replace with your Cloudinary cloud name
        uploadPreset: 'log book images', // 🔁 your preset
        multiple: true,
        sources: ['local', 'camera', 'url'],
        maxFiles: 5,
        folder: 'student_logs'
      }, (error, result) => {
        if (!error && result && result.event === "success") {
          const url = result.info.secure_url;
          imageUrls.push(url);
          updateImageInput();
          refreshPreview();
        }
      });
    });

    // Initialize UI with pre-existing images
    updateImageInput();
    refreshPreview();
  });
</script>

</body>
</html>
