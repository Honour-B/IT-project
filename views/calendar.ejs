<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Student Log Calendar</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css">
  <style>
    .calendar {
      display: grid;
      grid-template-columns: repeat(7, 1fr);
      gap: 10px;
      margin-top: 20px;
    }

    .day {
      border: 1px solid #ccc;
      border-radius: 8px;
      padding: 15px;
      text-align: center;
      cursor: pointer;
      transition: all 0.2s ease-in-out;
    }

    .day:hover {
      transform: scale(1.03);
      box-shadow: 0 0 8px rgba(0,0,0,0.1);
    }

    .day.today {
      border: 2px solid #000;
      background-color: #fff3cd;
    }

    .day.has-log {
      background-color: #d4edda;
      border-color: #28a745;
    }

    .day.no-log {
      background-color: #f8d7da;
      border-color: #dc3545;
    }

    .day.future {
      background-color: #e9ecef;
      color: #999;
      cursor: not-allowed;
      pointer-events: none;
    }

    .day.sunday {
      background-color: #f1f1f1;
      color: #aaa;
      border: 1px dashed #ccc;
      cursor: not-allowed;
      pointer-events: none;
    }

    .img-thumbnail {
      max-width: 100px;
      max-height: 100px;
      object-fit: cover;
    }
  </style>
</head>
<body class="container py-4">
  <a href="/submit-log" class="btn btn-secondary mb-3">üè† Home</a>
  <h1 class="mb-4 text-center">üìÖ Student Log Calendar</h1>

  <%
    const startDateObj = new Date(startDate);
    startDateObj.setHours(0, 0, 0, 0);
    const today = new Date();
    today.setHours(0, 0, 0, 0);
    const thisMonth = today.getMonth() + 1;
    const thisYear = today.getFullYear();

    const currMonth = Number(currentMonth);
    const currYear = Number(currentYear);

    let prevMonth = currMonth - 1;
    let prevYear = currYear;
    if (prevMonth < 1) {
      prevMonth = 12;
      prevYear -= 1;
    }

    let nextMonth = currMonth + 1;
    let nextYear = currYear;
    if (nextMonth > 12) {
      nextMonth = 1;
      nextYear += 1;
    }

  const itStartDate = new Date(startDate);
  const itEndDate = new Date(endDate);
  itStartDate.setHours(0, 0, 0, 0);
  itEndDate.setHours(0, 0, 0, 0);

  const isAfterStart = new Date(currYear, currMonth - 2, 1) > new Date(itStartDate.getFullYear(), itStartDate.getMonth() - 1);
  const isBeforeEnd = new Date(currYear, currMonth - 1) < new Date(itEndDate.getFullYear(), itEndDate.getMonth());

  const prevAllowed = isAfterStart || (currMonth > itStartDate.getMonth() + 1 || currYear > itStartDate.getFullYear());
  const nextAllowed = isBeforeEnd || (currMonth < itEndDate.getMonth() + 1 || currYear < itEndDate.getFullYear());

    let currentDate;
    if (!isNaN(currYear) && !isNaN(currMonth)) {
      currentDate = new Date(currYear, currMonth - 1, 1);
    } else {
      currentDate = new Date(); // fallback to today
    }
  %>

  <div class="bg-primary text-white text-center p-3 rounded shadow-sm mb-4">
    <h2 class="m-0"><%= currentDate.toLocaleDateString('en-US', { month: 'long', year: 'numeric' }) %></h2>
    <div class="d-flex justify-content-between align-items-center mt-3">
      <% if (prevAllowed) { %>
        <a href="/calendar?month=<%= prevMonth %>&year=<%= prevYear %>" class="btn btn-outline-light">&laquo; Prev</a>
      <% } else { %>
        <button class="btn btn-outline-light disabled">&laquo; Prev</button>
      <% } %>
      <% if (nextAllowed) { %>
        <a href="/calendar?month=<%= nextMonth %>&year=<%= nextYear %>" class="btn btn-outline-light">Next &raquo;</a>
      <% } else { %>
        <button class="btn btn-outline-light disabled">Next &raquo;</button>
      <% } %>
    </div>
  </div>

  <div class="calendar-wrapper">
    <div class="calendar calendar-header text-center fw-bold">
      <div>Sun</div><div>Mon</div><div>Tue</div><div>Wed</div><div>Thu</div><div>Fri</div><div>Sat</div>
    </div>

    <div class="calendar calendar-body">
      <%
        const firstDay = new Date(currYear, currMonth - 1, 1);
        const lastDay = new Date(currYear, currMonth, 0);
        const startOffset = firstDay.getDay(); // 0 = Sun
        const daysInMonth = lastDay.getDate();

        for (let i = 0; i < startOffset; i++) {
      %>
        <div class="day" style="visibility: hidden;"></div>
      <% } %>

      <%
        for (let day = 1; day <= daysInMonth; day++) {
          const currentDay = new Date(currYear, currMonth - 1, day);
          currentDay.setHours(0, 0, 0, 0);

          const isoDate = `${currentDay.getFullYear()}-${String(currentDay.getMonth() + 1).padStart(2, '0')}-${String(currentDay.getDate()).padStart(2, '0')}`;
          const log = logs[isoDate];
          const isToday = currentDay.toDateString() === today.toDateString();
          const isFuture = currentDay > today;
          const isSunday = currentDay.getDay() === 0;

          let classNames = "day";
          if (isToday) classNames += " today";
          if (isSunday) classNames += " sunday";
          else if (isFuture) classNames += " future";
          else if (log) classNames += " has-log";
          else classNames += " no-log";
      %>
        <div class="<%= classNames %>" 
            data-bs-toggle="<%= isSunday || isFuture ? '' : 'modal' %>" 
            data-bs-target="#logModal"
            data-date="<%= isoDate %>"
            data-log="<%= log ? log.log_text : '' %>"
            data-logid="<%= log ? log.log_id : '' %>"
            data-images='<%= log ? JSON.stringify(log.images || []) : "[]" %>'>
          <strong><%= day %></strong><br>
          <%= currentDay.toDateString().split(' ')[0] %>
        </div>
      <% } %>
    </div>
  </div>

  <!-- Log Modal -->
  <div class="modal fade" id="logModal" tabindex="-1" aria-labelledby="logModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
      <form class="modal-content" method="POST" action="/calendar">
        <div class="modal-header">
          <h5 class="modal-title" id="logModalLabel">üìã View / Edit Log</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body">
          <input type="hidden" name="date" id="log-date">
          <input type="hidden" name="log_id" id="log-id">

          <div class="mb-3">
            <label for="log-text" class="form-label">Log Text</label>
            <textarea name="log_text" id="log-text" rows="5" class="form-control" required></textarea>
          </div>

          <div id="log-images" class="mb-3 d-flex flex-wrap gap-2"></div>

          <div id="edit-warning" class="alert alert-warning d-none" role="alert">
            ‚ö†Ô∏è You can only edit or add logs for this week (Monday to today). Future dates and Sundays are not editable.
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="submit" class="btn btn-primary">Update Log</button>
        </div>
      </form>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    const modal = document.getElementById('logModal');
    modal.addEventListener('show.bs.modal', function (event) {
      const button = event.relatedTarget;
      const date = button.getAttribute('data-date');
      const logText = button.getAttribute('data-log') || '';
      const logId = button.getAttribute('data-logid') || '';
      const images = JSON.parse(button.getAttribute('data-images') || '[]');

      const logDate = new Date(date);
      const today = new Date();
      today.setHours(0, 0, 0, 0);

      const startOfWeek = new Date(today);
      const day = today.getDay();
      const diff = day === 0 ? 6 : day - 1;
      startOfWeek.setDate(today.getDate() - diff);
      startOfWeek.setHours(0, 0, 0, 0);

      const isEditable = logDate >= startOfWeek && logDate <= today && logDate.getDay() !== 0;

      document.getElementById('log-date').value = date;
      document.getElementById('log-id').value = logId;
      document.getElementById('log-text').value = logText;

      const textarea = modal.querySelector('textarea');
      const submitBtn = modal.querySelector('button[type="submit"]');
      const warning = document.getElementById('edit-warning');

      textarea.readOnly = !isEditable;
      submitBtn.disabled = !isEditable;
      warning.classList.toggle('d-none', isEditable);

      const imgContainer = document.getElementById('log-images');
      imgContainer.innerHTML = '';
      images.forEach(url => {
        const img = document.createElement('img');
        img.src = url;
        img.alt = "Log Image";
        img.className = "img-thumbnail";
        img.style.maxWidth = "150px";
        img.style.maxHeight = "150px";
        imgContainer.appendChild(img);
      });
    });
  </script>
</body>
</html>

